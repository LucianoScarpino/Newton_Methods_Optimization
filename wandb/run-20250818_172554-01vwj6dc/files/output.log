Traceback (most recent call last):
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Tools\Conditions.py", line 24, in H_is_positive_definite
    return np.linalg.cholesky(hessf), hessf, iter
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\salvo\AppData\Local\Programs\Python\Python312\Lib\site-packages\numpy\linalg\_linalg.py", line 839, in cholesky
    r = gufunc(a, signature=signature)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\salvo\AppData\Local\Programs\Python\Python312\Lib\site-packages\numpy\linalg\_linalg.py", line 107, in _raise_linalgerror_nonposdef
    raise LinAlgError("Matrix is not positive definite")
numpy.linalg.LinAlgError: Matrix is not positive definite

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Test.py", line 263, in <module>
    Test(n,method,function)
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Test.py", line 245, in Test
    run_test(comb,x0)
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Test.py", line 195, in run_test
    inner_iter, alphas, tol_seq = computation(comb,function, method)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Test.py", line 20, in computation
    execution_times_, xk, fxk, norm_gradfx_seq, k, success, inner_iter, alphas, tol_seq= NM.Run(timing=True)
                                                                                         ^^^^^^^^^^^^^^^^^^^
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Modified_Newton_Method\ModifiedNewtonMethod.py", line 193, in Run
    L, bk, inner_iter = self.conditions.H_is_positive_definite(hessf,self.kmax,self.H_correction_factor)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Tools\Conditions.py", line 26, in H_is_positive_definite
    L, bk, iter = self.solvers.Build_bk(hessf,k_max,corr_fact)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\salvo\OneDrive\Desktop\model\Newton_Methods_Optimization\Modified_Newton_Method\SolverInstruments.py", line 31, in Build_bk
    L = np.linalg.cholesky(bk)
        ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\salvo\AppData\Local\Programs\Python\Python312\Lib\site-packages\numpy\linalg\_linalg.py", line 736, in _cholesky_dispatcher
    def _cholesky_dispatcher(a, /, *, upper=None):

KeyboardInterrupt
